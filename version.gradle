import groovy.json.JsonOutput

ext {


    android = [
            compileSdkVersion = 30,
            buildToolsVersion = '30.0.2',
            minSdk = 21,
            targetSdk = 29,
    ]

    java = [
            javaSourceCompatibility = JavaVersion.VERSION_1_8,
            javaTargetCompatibility = JavaVersion.VERSION_1_8
    ]

    kotlin = [
            kotlinVersion = '1.5.21',
            kotlinOptionsJvmTarget = '1.8'
    ]


    //todo 依赖类型：依赖远程maven组件的构建类型
    // false: 依赖release版本
    // true: 依赖debug版本
    def dependenceTypeIsDebug = false
    def buildSuffix = dependenceTypeIsDebug ? "-debug" : "-release"
    //用于生成依赖信息的类
    def switchConfig = new SwitchConfig()
    //公共的包名前缀统一定义在这里,
    groupCommonPrefix = [
            // 公共的包名前缀统一定义在这里, 组件索引前缀，添加android标记以区别其它项目
            com_qlife_android = "com.qlife.android",
            build_suffix = buildSuffix,
            switch_config = switchConfig
    ]

    /** ========================================================= */
    /** ====================== Maven私服组件 ===================== */
    /** ========================================================= */

    //maven 组件依赖版本号
    versionCommponentArray = [
            //todo maven 组件版本区分 release 和 snapshot ,添加 versionSuffix 后缀自动适配
            //todo maven 组件版本区分 debug 和 release ,添加 buildSuffix 后缀自动适配
            libNet = getPath("lib-net", "1.0.1"),
            libUtils = getPath("lib-utils", "1.0.0"),
            libVerificationCode = getPath("lib-verification-code", "1.0.0"),
            libFloatView = getPath("lib-float-view", "1.0.0"),
            libSlideview = getPath("lib-slideview", "1.0.0"),
            libCountdownview = getPath("lib-countdown-view", "1.0.0"),
            libArouter = getPath("lib-arouter", "1.0.0"),
            libCrashlytics = getPath("lib-crashlytics", "1.0.0"),
            //todo false 不区分区分 buildSuffix
            libLoginAliyun = getPath("lib-login-aliyun", "1.0.0", false),

            //仓库：qlife-lib-widget-android
            libWidget = getPath("lib-widget", "1.0.4", false),
            libRes = getPath("lib-res", "1.0.4", false),
            libDialog = getPath("lib-dialog", "1.0.4", false),
            libBaseAdapter = getPath("lib-base-adapter", "1.0.4", false),

            //仓库：qlife-base-app-android
            baseActivity = getPath("base-activity", "1.0.2", false),
            baseAuth = getPath("base-auth", "1.0.1", false),
            baseBean = getPath("base-bean", "1.0.1", false),
            baseRouter = getPath("base-router", "1.0.1", false),

            //仓库：qlife-base-android
            baseWeb = getPath("base-web", "1.0.1", false),
            baseVoice = getPath("base-voice", "1.0.1", false),
            baseGallery = getPath("base-gallery", "1.0.1", false),
            baseLoginAliyun = getPath("base-login-aliyun", "1.0.1", false),
            basePushAliyun = getPath("base-push-aliyun", "1.0.1", false),
            baseUmeng = getPath("base-umeng", "1.0.1", false),
            baseUpload = getPath("base-upload", "1.0.1", false),
            baseUpdate = getPath("base-update", "1.0.1", false),
            baseLbsAmap = getPath("base-lbs-amap", "1.0.1", false),
            baseMqtt = getPath("base-mqtt", "1.0.1", false),
            baseDevTools = getPath("base-dev-tools", "1.0.3", false),


            //仓库：qlife-lib-baidu-face-android
            baseFace = getPath("base-face", "1.0.1", false),
            libBaiduFaceUi = getPath("lib-baidu-face-ui", "1.0.2", false),

            //仓库：qlife-lib-baidu-Ocr-android
            baseOcr = getPath("base-ocr", "1.0.2", false),
            libBaiduOcrUi = getPath("lib-baidu-ocr-ui", "1.0.2", false),

            //仓库： https://github.com/qlife-android/qlife-lib-ui-android
            libUiHelper = getPath("lib-ui-helper", "1.0.0", false),


    ]

    //依赖信息更新完之后，顺序执行到这里开始生成json
    switch_config.generateSwitchConfigJson()


    //三方依赖库多个依赖路径引入同一个版本号时需要提取版本号
    versionArray = [
            stethoVersion = '1.5.1',
            retrofitVersion = '2.6.0',
            core_version = "1.6.0",
            okhttpVersion = '4.2.2',
            glideVersion = '4.11.0',
            chuckVersion = '1.1.0',
            chuckerVersion = '3.2.0',
            butterknifeVersion = '10.2.1',
            immersionbarVersion = '3.0.0',
            smartRefreshHeaderVersion = '1.0.5.1',
            leakcanaryVersion = '1.1.2',
            tinkerVersion = '1.9.14.6',
            permissionsdispatcherVersion = '4.8.0',
            aliPushVersion = '3.2.1',
            appDispatcherVersion = '1.0.6',
            jDispatcherVersion = '0.0.7',
            navigationVersion = "2.3.5"

    ]

    //引入三方依赖库时考虑该库到稳定性，可维护性，需要标明引入到github地址并归类放置
    dependencies = [

            /** ========================================================= */
            /** =================== android/androidX ==================== */
            /** ========================================================= */
            //androidx迁移比对表：https://developer.android.google.cn/jetpack/androidx/migrate?hl=zh_cn#migrate
            //appcompat
            appcompat = 'androidx.appcompat:appcompat:1.2.0',
            // Java language implementation
            core = "androidx.core:core:$core_version",
            // Kotlin
            coreKtx = "androidx.core:core-ktx:$core_version",
            //junit
            junit = 'junit:junit:4.13.2',
            //androidx-junit
            junitX = 'androidx.test.ext:junit:1.1.2',
            //androidx-espresso-core
            espressoCore = 'androidx.test.espresso:espresso-core:3.3.0',
            //AndroidJUnitRunner
            androidJUnitRunner = "android.support.test.runner.AndroidJUnitRunner",
            //design
            design = "com.google.android.material:material:1.3.0",
            //constraintlayout
            constraintLayout = 'androidx.constraintlayout:constraintlayout:2.0.4',
            //recyclerview-v7
            recyclerview = 'androidx.recyclerview:recyclerview:1.1.0',
            //multidex
            multidex = 'androidx.multidex:multidex:2.0.0',
            //navigation
            navigationFragmentKtx = "androidx.navigation:navigation-fragment-ktx:$navigationVersion",
            navigationUiKtx = "androidx.navigation:navigation-ui-ktx:$navigationVersion",


            /** ========================================================= */
            /** ========================= kotlin ======================== */
            /** ========================================================= */
            //kotlin-stdlib-jdk7
            //kotlinStdlibJdk7 = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion",
            //kotlin-stdlib-jdk8
            kotlinStdlibJdk8 = "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion",
            //anko-sqlite
            ankoSqlite = "org.jetbrains.anko:anko-sqlite:0.10.5",
            //kotlin-reflect
            kotlinReflect = "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion",

            /** ========================================================= */
            /** ========================== tools ======================== */
            /** ========================================================= */

            vbHelper = 'com.github.jaydroid1024:VBHelper:0.0.7',
            anyby = 'com.github.jaydroid1024.anyby:anyby:0.0.7',

            cactus = 'com.gyf.cactus:cactus:1.1.3-beta13',
            //stetho 调试工具 https://github.com/facebook/stetho
            stetho = "com.facebook.stetho:stetho:$stethoVersion",
            //stetho 网络调试 https://github.com/facebook/stetho
            stethoOkhttp3 = "com.facebook.stetho:stetho-okhttp3:$stethoVersion",
            //stetho 网络调试 https://github.com/facebook/stetho
            stethoUrlconnection = "com.facebook.stetho:stetho-urlconnection:$stethoVersion",

            //Chuck Okhttp日志打印工具 https://github.com/jgilfelt/chuck
            chuckDebug = "com.readystatesoftware.chuck:library:$chuckVersion",
            //Chuck Okhttp日志打印工具 https://github.com/jgilfelt/chuck
            chuckRelease = "com.readystatesoftware.chuck:library-no-op:$chuckVersion",
            //Chucker Okhttp日志和Android异常信息打印工具 https://github.com/ChuckerTeam/chucker
            ChuckerDebug = "com.github.ChuckerTeam.Chucker:library:$chuckerVersion",
            //Chucker Okhttp日志和Android异常信息打印工具 https://github.com/ChuckerTeam/chucker
            ChuckerRelease = "com.github.ChuckerTeam.Chucker:library-no-op:$chuckerVersion",

            //logger https://github.com/orhanobut/logger
            logger = "com.orhanobut:logger:2.2.0",

            //arouter api https://github.com/alibaba/ARouter
            arouterApi = "com.alibaba:arouter-api:1.5.1",
            //arouter compiler https://github.com/alibaba/ARouter
            arouterCompiler = "com.alibaba:arouter-compiler:1.5.1",
            //arouter-register
            arouterRegister = "com.alibaba:arouter-register:1.0.2",

            //butterknife https://github.com/JakeWharton/butterknife
            butterknife = "com.jakewharton:butterknife:$butterknifeVersion",
            //butterknifeCompiler https://github.com/JakeWharton/butterknife
            butterknifeCompiler = "com.jakewharton:butterknife-compiler:$butterknifeVersion",

            //eventbus https://github.com/greenrobot/EventBus
            eventbus = 'org.greenrobot:eventbus:3.2.0',
            //greendao https://github.com/greenrobot/greenDAO
            greendao = 'org.greenrobot:greendao:3.2.2',

            //gson https://github.com/google/gson
            gson = "com.google.code.gson:gson:2.8.5",
            // matisse https://github.com/zhihu/Matisse
            matisse = "com.zhihu.android:matisse:0.5.3-beta3",
            //firebase  https://firebase.google.com/support/release-notes/android?hl=zh-cn
            firebaseCore = 'com.google.firebase:firebase-core:18.0.2',
            firebaseAnaly = 'com.google.firebase:firebase-analytics:18.0.2',
            firebaseCrashlytics = 'com.google.firebase:firebase-crashlytics:17.3.1',
            firebaseCrashlyticsNdk = 'com.google.firebase:firebase-crashlytics-ndk:17.3.1',


            //easypermissions
            easypermissions = "pub.devrel:easypermissions:1.1.1",
            //leakcanary
            leakcanaryDebug = "com.squareup.leakcanary:leakcanary-android:$leakcanaryVersion",
            leakcanaryRelease = "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanaryVersion",

            //图片压缩工具
            luban = "top.zibin:Luban:1.1.8",

            //zxing
            zxing = 'com.google.zxing:core:3.3.3',
            //barcode scanner
            zxingBarcodeScanner = 'me.dm7.barcodescanner:zxing:1.9.13',
            zbarBarcodeScanner = 'me.dm7.barcodescanner:zbar:1.9.8',

            //rxandroidble
            rxandroidble = 'com.polidea.rxandroidble:rxandroidble:1.3.3',
            //键盘弹起监听工具
            keyboardListener = "net.yslibrary.keyboardvisibilityevent:keyboardvisibilityevent:2.3.0",

            fastJson = 'com.alibaba:fastjson:1.2.61',

            // pdfviewpager  https://github.com/voghDev/PdfViewPager
            pdfviewpager = 'es.voghdev.pdfviewpager:library:1.1.2',

            //配合插件使用自动生产相关代码 https://github.com/permissions-dispatcher/PermissionsDispatcher
            //基于注解+AOP运行时权限工具   https://github.com/permissions-dispatcher/PermissionsDispatcher
            permissionsdispatcher = "org.permissionsdispatcher:permissionsdispatcher:${permissionsdispatcherVersion}",
            permissionsdispatcherProcessor = "org.permissionsdispatcher:permissionsdispatcher-processor:${permissionsdispatcherVersion}",

            //[app-dispatcher](https://github.com/jaydroid1024/app-dispatcher/tree/master) 是一款 Android 应用生命周期分发框架，基于组件化的设计思路，使用简单。
            appDispatcherBronze = "com.github.jaydroid1024.app-dispatcher:dispatcher-bronze:$appDispatcherVersion",

            permissionx = 'com.permissionx.guolindev:permissionx:1.4.0',


            jdispatcherApi = "com.github.jaydroid1024.JDispatcher:jdispatcher-api:$jDispatcherVersion",
            jdispatcherCompiler = "com.github.jaydroid1024.JDispatcher:jdispatcher-compiler:$jDispatcherVersion",
            jdispatcherPlugin = "com.github.jaydroid1024.JDispatcher:jdispatcher-plugin:$jDispatcherVersion",

            // 高德地图： https://lbs.amap.com/api/android-location-sdk/guide/create-project/android-studio-create-project
            //导航
            amapNavi3dmap = 'com.amap.api:navi-3dmap:7.8.0_3dmap7.8.0',
            //定位
            amapLocation = 'com.amap.api:location:5.2.0',
            //搜索
            amapSearch = 'com.amap.api:search:7.7.0',

            // TinyPinyin核心包，约80KB
            tinypinyin = 'com.github.promeg:tinypinyin:2.0.3',
            // 可选，适用于Android的中国地区词典
            tinypinyinAndroid = 'com.github.promeg:tinypinyin-lexicons-android-cncity:2.0.3',


            /** ========================================================= */
            /** ========================= network ======================= */
            /** ========================================================= */
            //retrofit https://github.com/square/retrofit
            retrofit = "com.squareup.retrofit2:retrofit:$retrofitVersion",
            //retrofit converter-gson https://github.com/square/retrofit/blob/master/retrofit-converters/gson/README.md
            retrofitConverterGson = "com.squareup.retrofit2:converter-gson:$retrofitVersion",
            //retrofit adapter-rxjava https://github.com/square/retrofit/tree/master/retrofit-adapters/rxjava2
            retrofitAdapterRxjava = "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion",
            // Retrofit 同时支持多个 BaseUrl 以及动态改变 BaseUrl(已知问题：不同url 的https证书问题) https://github.com/JessYanCoding/RetrofitUrlManager
            retrofitUrlManager = "me.jessyan:retrofit-url-manager:1.4.0",

            //okhttp https://github.com/square/okhttp
            okhttp = "com.squareup.okhttp3:okhttp:$okhttpVersion",
            //okhttp logging-interceptor https://github.com/square/okhttp/blob/master/okhttp-logging-interceptor/README.md
            okhttpLoggingInterceptor = "com.squareup.okhttp3:logging-interceptor:$okhttpVersion",
            // PersistentCookieJar https://github.com/franmontiel/PersistentCookieJar
            persistentcookiejar = "com.github.franmontiel:PersistentCookieJar:v1.0.1",
            //okhttpprofiler
            okhttpprofiler = 'com.localebro:okhttpprofiler:1.0.8',

            //rxjava https://github.com/ReactiveX/RxJava  todo rxjava:3.x.x
            rxjava = 'io.reactivex.rxjava2:rxjava:2.2.10',
            //rxandroid https://github.com/ReactiveX/RxAndroid todo rxandroid:3.x.x
            rxandroid = 'io.reactivex.rxjava2:rxandroid:2.1.1',

            //glide 图片加载 https://github.com/bumptech/glide
            glide = "com.github.bumptech.glide:glide:$glideVersion",
            //glide图片加载注解 https://github.com/bumptech/glide
            glideAnnotationProcessor = "com.github.bumptech.glide:compiler:$glideVersion",
            //Glide图片变换库
            glideTransformations = 'jp.wasabeef:glide-transformations:4.0.1',

            //aspectjrt
            aspectjrt = 'org.aspectj:aspectjrt:1.8.9',

            tinypinyin = 'com.github.promeg:tinypinyin:1.0.0',

            /** ========================================================= */
            /** ========================== UI相关 ======================== */
            /** ========================================================= */
            // statusbarUtil https://github.com/laobie/StatusBarUtil
            statusbarUtil = "com.jaeger.statusbarutil:library:1.5.1",

            // 基础依赖包，必须要依赖 https://github.com/gyf-dev/ImmersionBar
            immersionbar = "com.gyf.immersionbar:immersionbar:$immersionbarVersion",
            // fragment快速实现（可选） https://github.com/gyf-dev/ImmersionBar
            immersionbarComponents = "com.gyf.immersionbar:immersionbar-components:$immersionbarVersion",
            // kotlin扩展（可选） https://github.com/gyf-dev/ImmersionBar
            immersionbarKtx = "com.gyf.immersionbar:immersionbar-ktx:$immersionbarVersion",
            // SmartRefreshLayout 1.0.5及以前版本的老用户升级需谨慎，API改动过大 https://github.com/scwang90/SmartRefreshLayout
            smartRefreshLayout = "com.scwang.smartrefresh:SmartRefreshLayout:$smartRefreshHeaderVersion",
            // SmartRefreshHeader  没有使用特殊Header，可以不加这行 https://github.com/scwang90/SmartRefreshLayout
            smartRefreshHeader = "com.scwang.smartrefresh:SmartRefreshHeader:$smartRefreshHeaderVersion",
            //WheelPicker
            wheelPicker = 'cn.aigestudio.wheelpicker:WheelPicker:1.1.2',
            //流式布局
            flowLayout = 'com.zhy:flowlayout-lib:1.0.3',
            //倒计时
            countdownView = 'com.github.iwgang:countdownview:2.1.6',
            //signature-pad 签字板
            signaturePad = 'com.github.gcacace:signature-pad:1.2.1',
            //日期滚轮对话框
            datePicker = 'com.github.gzu-liyujiang.AndroidPicker:WheelPicker:1.5.6.20181018',
            //日期滚轮
            pickerView = 'com.contrarywind:Android-PickerView:4.1.8',
            //日历范围选择
            calendarView = 'com.haibin:calendarview:3.7.0',
            calendarView2 = 'com.github.kizitonwose:CalendarView:1.0.1',
            //popup window
            basePopupWindow = 'com.github.razerdp:BasePopup:2.2.0',
            //图片缩放控件
            photoView = 'com.github.chrisbanes:PhotoView:1.2.5',
            //switchButton
            switchButton = 'com.github.zcweng:switch-button:0.0.3@aar',
            //GSYVideoPlayer
            gsyVideoPlayer = 'com.shuyu:GSYVideoPlayer:7.1.2',
            //ExoPlayer
            exoplayer = 'com.google.android.exoplayer:exoplayer:2.11.1',
            //circleimageview  https://github.com/hdodenhof/CircleImageView/
            circleimageview = 'de.hdodenhof:circleimageview:3.1.0',
            //  https://github.com/li-xiaojun/XPopup
            xpopup = 'com.lxj:xpopup:2.2.23',
            //  MagicIndicator  https://github.com/hackware1993/MagicIndicator
            magicIndicator = 'com.github.hackware1993:MagicIndicator:1.7.0', // for androidx
            //https://github.com/PhilJay/MPAndroidChart
            mpChart = 'com.github.PhilJay:MPAndroidChart:v3.1.0',
            //https://github.com/jaydroid1024/PhoneTextWatcher
            //手机号3-4-4格式化输入监听器，支持自定义分隔符，支持末端输入/删除，中间输入/删除，任意位置黏贴/剪贴多个数字等多种交互场景
            phoneTextWatcher = 'com.github.jaydroid1024:PhoneTextWatcher:0.0.2',

            /** ========================================================= */
            /** ======================= 三方服务/SDK ===================== */
            /** ========================================================= */
            //友盟基础组件（必须）
            umCommon = 'com.umeng.umsdk:common:9.4.0',
            umAsms = 'com.umeng.umsdk:asms:1.2.3',
            umApm = 'com.umeng.umsdk:apm:1.4.0',
            umCrash = 'com.umeng.umsdk:crash:0.0.4',
            umsdkUtdid = "com.umeng.umsdk:utdid:1.5.2",
            //分享核心库
            umShareCore = 'com.umeng.umsdk:share-core:7.0.3',
            umShareBoard = 'com.umeng.umsdk:share-board:7.0.3',
            umShareWX = 'com.umeng.umsdk:share-wx:7.0.3',


            //七牛云
            qiniu = 'com.qiniu:qiniu-android-sdk:7.5.0',

            //智齿客服
            sobot = 'com.sobot.chat:sobotsdk:2.3.2',

            //微信不包含统计功能 （com.tencent.mm.opensdk:wechat-sdk-android-without-mta:+包含统计功能）
            wechat = 'com.tencent.mm.opensdk:wechat-sdk-android-with-mta:+',

            //mqtt client
            mqttClient = 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.5',
            //mqtt service
            mqttService = 'org.eclipse.paho:org.eclipse.paho.android.service:1.1.1',

            // https://mvnrepository.com/artifact/org.eclipse.paho/org.eclipse.paho.mqttv5.client
            mqttv5Client = 'org.eclipse.paho:org.eclipse.paho.mqttv5.client:1.2.5',


            //tinker热修复：tinker的核心库
            tinkerLib = "com.tencent.tinker:tinker-android-lib:$tinkerVersion",
            tinkerLoader = "com.tencent.tinker:tinker-android-loader:$tinkerVersion",
            //tinker热修复：可选，用于生成application类
            tinkerAnno = "com.tencent.tinker:tinker-android-anno:$tinkerVersion",

            //deeplink
            linkedme = 'cc.linkedme.deeplinks:link-page:1.1.6',

            // 信鸽基础包，不包含厂商通道
            xinGe = 'com.tencent.xinge:xinge:4.3.5-release',
            // jp包
            tencentJP = 'com.tencent.jg:jg:1.1',
            // wup包
            tencentWUP = 'com.tencent.wup:wup:1.0.0.E-Release',
            // mid包，minSdkVersion 14
            tencentMID = 'com.tencent.mid:mid:4.0.7-Release',
            // 小米Push
            tencentXiaoMi = 'com.tencent.xinge:mipush:4.3.2-xiaomi-release',
            // 华为Push
            tencentHuaWei = 'com.tencent.xinge:xghw:4.3.2-huawei-release',

            answers = 'com.crashlytics.sdk.android:answers:1.4.7',
            //腾讯文件浏览服务
            tbssdk = 'com.tencent.tbs.tbssdk:sdk:43993',
            //阿里云推送服务
            //接入文档：https://help.aliyun.com/document_detail/51056.html?spm=a2c4g.11186623.6.568.54e969a0jwQiMh#%E4%B8%80%E3%80%81Maven%E5%BA%93%E5%BF%AB%E9%80%9F%E9%9B%86%E6%88%90(%E8%BF%9C%E7%A8%8B%E5%90%8C%E6%AD%A5)
            //注：com.aliyun.ams:alicloud-android-push:3.2.1版本与com.aliyun.ams:alicloud-android-third-push:3.2.0版本匹配使用，两者需要同时升级
            alicloudAndroidPush = "com.aliyun.ams:alicloud-android-push:3.2.2",
            alicloudAndroidThirdPush = "com.aliyun.ams:alicloud-android-third-push:3.2.2@aar",
            //Huawei依赖 同时在AndroidManifest文件中添加 appid
            alicloudHuaweiPush = 'com.aliyun.ams:huawei-push:2.6.3.305',
            alicloudHuaweiPushBase = 'com.aliyun.ams:huawei-push-base:2.6.3.305',
            //小米依赖
            alicloudMipush = 'com.xiaomi.mipush.sdk:mipush:3.7.9',
            //OPPO依赖
            alicloudOpush = 'com.aliyun.ams:opush:2.1.0-fix@aar',
            //魅族依赖
            alicloudMeizuPush = 'com.aliyun.ams:meizu-push:3.8.7.1',
            //VIVO依赖 同时在AndroidManifest文件中添加 appKey,appID
            alicloudThirdVivoPush = 'com.aliyun.ams:third_vivopush:2.9.0.1',
            //谷歌依赖
            alicloudFirebaseMessaging = 'com.google.firebase:firebase-messaging:17.6.0',

            //viewpager2
            viewpager2 = 'androidx.viewpager2:viewpager2:1.0.0',
            //material
//            material = 'com.google.android.material:material:1.2.0-alpha02'
            flexbox = 'com.google.android:flexbox:2.0.1',
            //https://github.com/PhilJay/MPAndroidChart
            mpChart = 'com.github.PhilJay:MPAndroidChart:v3.1.0',
            //https://github.com/razerdp/AnimatedPieView
            animatedPieView = 'com.github.razerdp:AnimatedPieView:1.3.0',

            //https://github.com/CymChad/BaseRecyclerViewAdapterHelper
            cymAdapter="com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.4",

    ]

}

private String getPath(String appName, String version) {
    return getPath(appName, version, true)
}


private String getPath(String appName, String version, Boolean buildSuffix) {
    def group = rootProject.ext.com_qlife_android
    def switchConfig = rootProject.ext.switch_config
    def build_suffix = buildSuffix ? rootProject.ext.build_suffix : ""
    def name = "$appName$build_suffix"
    def dependencies = "$group:$name:$version"
    println "Qlife Dependencies: $dependencies"
    switchConfig.collectionSwitchConfigJson(group, name, version)
    return dependencies
}

class SwitchConfig {

    def dependencies = new ArrayList<HashMap<String, String>>()

    public generateSwitchConfigJson() {
        try {
            // 指定路径如果没有则创建并添加
            File file = new File("switch/version.json")
            //获取父目录
            File fileParent = file.getParentFile()
            //判断是否存在
            if (!fileParent.exists()) {
                //创建父目录文件
                fileParent.mkdirs()
            }
            file.createNewFile()
            file.write(JsonOutput.prettyPrint(JsonOutput.toJson(dependencies)))
        } catch (FileNotFoundException exception) {
            exception.printStackTrace()
            println "switch/version.json 文件生成失败"
        }
    }

    public collectionSwitchConfigJson(String group, String name, String version) {
        def dependenciesInfo = new TreeMap<String, Object>()
        dependenciesInfo.put("group", group)
        dependenciesInfo.put("name", name)
        dependenciesInfo.put("version", version)
        dependencies.add(dependenciesInfo)
    }
}

